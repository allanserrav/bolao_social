// <auto-generated />
using BolaoSocial.Data;
using BolaoSocial.Shared.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BolaoSocial.Data.EFCoreMigrations.Migrations
{
    [DbContext(typeof(EFDataContext))]
    [Migration("20180527173703_migration_v002")]
    partial class migration_v002
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BolaoSocial.Shared.Entities.Agrupamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EventoId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool>("ObjDesabilitado");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasFilter("[Codigo] IS NOT NULL");

                    b.HasIndex("EventoId");

                    b.ToTable("agrupamento");
                });

            modelBuilder.Entity("BolaoSocial.Shared.Entities.Competicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("EventoTipo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool>("ObjDesabilitado");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasFilter("[Codigo] IS NOT NULL");

                    b.ToTable("competicao");
                });

            modelBuilder.Entity("BolaoSocial.Shared.Entities.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Cancelado");

                    b.Property<string>("Codigo")
                        .HasMaxLength(20);

                    b.Property<int?>("CompeticaoId");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EventoPaiId");

                    b.Property<DateTime>("Horario");

                    b.Property<string>("Localizacao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool>("ObjDesabilitado");

                    b.Property<bool>("PermiteSubEvento");

                    b.Property<bool>("Processado");

                    b.Property<byte>("Tipo");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasFilter("[Codigo] IS NOT NULL");

                    b.HasIndex("CompeticaoId");

                    b.HasIndex("EventoPaiId");

                    b.ToTable("evento");
                });

            modelBuilder.Entity("BolaoSocial.Shared.Entities.EventoParticipante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EventoId");

                    b.Property<bool>("ObjDesabilitado");

                    b.Property<int?>("ParticipanteId");

                    b.Property<decimal>("Resultado");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasFilter("[Codigo] IS NOT NULL");

                    b.HasIndex("EventoId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("participante_evento");
                });

            modelBuilder.Entity("BolaoSocial.Shared.Entities.PalpiteEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EventoId");

                    b.Property<bool>("ObjDesabilitado");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasFilter("[Codigo] IS NOT NULL");

                    b.HasIndex("EventoId");

                    b.ToTable("palpite_evento");
                });

            modelBuilder.Entity("BolaoSocial.Shared.Entities.PalpiteParticipante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AcertoId");

                    b.Property<string>("Codigo")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("ObjDesabilitado");

                    b.Property<int?>("PalpiteEventoId");

                    b.Property<decimal>("PalpiteValor");

                    b.Property<int?>("ParticipanteId");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("AcertoId");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasFilter("[Codigo] IS NOT NULL");

                    b.HasIndex("PalpiteEventoId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("palpite_participante");
                });

            modelBuilder.Entity("BolaoSocial.Shared.Entities.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<bool>("ObjDesabilitado");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasFilter("[Codigo] IS NOT NULL");

                    b.ToTable("participante");
                });

            modelBuilder.Entity("BolaoSocial.Shared.Entities.RegraAcerto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<bool>("ObjDesabilitado");

                    b.Property<decimal>("Pontos");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasFilter("[Codigo] IS NOT NULL");

                    b.ToTable("regra_acerto");
                });

            modelBuilder.Entity("BolaoSocial.Shared.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool>("ObjDesabilitado");

                    b.Property<int>("SegundosLoginExpirar");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasFilter("[Codigo] IS NOT NULL");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("BolaoSocial.Shared.Entities.Agrupamento", b =>
                {
                    b.HasOne("BolaoSocial.Shared.Entities.Evento")
                        .WithMany("Agrupamentos")
                        .HasForeignKey("EventoId");
                });

            modelBuilder.Entity("BolaoSocial.Shared.Entities.Evento", b =>
                {
                    b.HasOne("BolaoSocial.Shared.Entities.Competicao", "Competicao")
                        .WithMany("Eventos")
                        .HasForeignKey("CompeticaoId");

                    b.HasOne("BolaoSocial.Shared.Entities.Evento", "EventoPai")
                        .WithMany()
                        .HasForeignKey("EventoPaiId");
                });

            modelBuilder.Entity("BolaoSocial.Shared.Entities.EventoParticipante", b =>
                {
                    b.HasOne("BolaoSocial.Shared.Entities.Evento", "Evento")
                        .WithMany("Participantes")
                        .HasForeignKey("EventoId");

                    b.HasOne("BolaoSocial.Shared.Entities.Participante", "Participante")
                        .WithMany()
                        .HasForeignKey("ParticipanteId");
                });

            modelBuilder.Entity("BolaoSocial.Shared.Entities.PalpiteEvento", b =>
                {
                    b.HasOne("BolaoSocial.Shared.Entities.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId");
                });

            modelBuilder.Entity("BolaoSocial.Shared.Entities.PalpiteParticipante", b =>
                {
                    b.HasOne("BolaoSocial.Shared.Entities.RegraAcerto", "Acerto")
                        .WithMany()
                        .HasForeignKey("AcertoId");

                    b.HasOne("BolaoSocial.Shared.Entities.PalpiteEvento")
                        .WithMany("Palpites")
                        .HasForeignKey("PalpiteEventoId");

                    b.HasOne("BolaoSocial.Shared.Entities.EventoParticipante", "Participante")
                        .WithMany()
                        .HasForeignKey("ParticipanteId");
                });
#pragma warning restore 612, 618
        }
    }
}
